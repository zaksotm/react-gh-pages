{"ast":null,"code":"/**\n * Get an image's width and height\n * @param {(File|blob|string)} File, blob, or URL string\n * @returns {Promise} resolved with object containing image width and height\n */\nmodule.exports = function browserImageSize(image) {\n  /* istanbul ignore next */\n  var DOMURL = require('object-url');\n\n  return new Promise(function (resolve, reject) {\n    var url = typeof image === 'string' ? image : DOMURL.create(image);\n    if (!url) throw new Error('Must use a valid image');\n    var img = document.createElement('img');\n\n    img.onload = function onload() {\n      if (typeof image !== 'string') DOMURL.revoke(url);\n      resolve({\n        width: img.width,\n        height: img.height\n      });\n    };\n\n    img.onerror = function onerror(err) {\n      if (typeof image !== 'string') DOMURL.revoke(url);\n      reject(err);\n    };\n\n    img.src = url;\n  });\n};","map":{"version":3,"sources":["/Users/zakstratton/Documents/design-tool/node_modules/browser-image-size/lib/index.js"],"names":["module","exports","browserImageSize","image","DOMURL","require","Promise","resolve","reject","url","create","Error","img","document","createElement","onload","revoke","width","height","onerror","err","src"],"mappings":"AAAA;;;;;AAKAA,MAAM,CAACC,OAAP,GAAiB,SAASC,gBAAT,CAA2BC,KAA3B,EAAkC;AACjD;AACA,MAAIC,MAAM,GAAGC,OAAO,CAAC,YAAD,CAApB;;AAEA,SAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5C,QAAIC,GAAG,GAAG,OAAON,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoCC,MAAM,CAACM,MAAP,CAAcP,KAAd,CAA9C;AACA,QAAI,CAACM,GAAL,EAAU,MAAM,IAAIE,KAAJ,CAAU,wBAAV,CAAN;AAEV,QAAIC,GAAG,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAV;;AACAF,IAAAA,GAAG,CAACG,MAAJ,GAAa,SAASA,MAAT,GAAmB;AAC9B,UAAI,OAAOZ,KAAP,KAAiB,QAArB,EACEC,MAAM,CAACY,MAAP,CAAcP,GAAd;AACFF,MAAAA,OAAO,CAAC;AAACU,QAAAA,KAAK,EAAEL,GAAG,CAACK,KAAZ;AAAmBC,QAAAA,MAAM,EAAEN,GAAG,CAACM;AAA/B,OAAD,CAAP;AACD,KAJD;;AAMAN,IAAAA,GAAG,CAACO,OAAJ,GAAc,SAASA,OAAT,CAAkBC,GAAlB,EAAuB;AACnC,UAAI,OAAOjB,KAAP,KAAiB,QAArB,EACEC,MAAM,CAACY,MAAP,CAAcP,GAAd;AACFD,MAAAA,MAAM,CAACY,GAAD,CAAN;AACD,KAJD;;AAMAR,IAAAA,GAAG,CAACS,GAAJ,GAAUZ,GAAV;AACD,GAlBM,CAAP;AAmBD,CAvBD","sourcesContent":["/**\n * Get an image's width and height\n * @param {(File|blob|string)} File, blob, or URL string\n * @returns {Promise} resolved with object containing image width and height\n */\nmodule.exports = function browserImageSize (image) {\n  /* istanbul ignore next */\n  var DOMURL = require('object-url')\n\n  return new Promise(function (resolve, reject) {\n    var url = typeof image === 'string' ? image : DOMURL.create(image)\n    if (!url) throw new Error('Must use a valid image')\n\n    var img = document.createElement('img')\n    img.onload = function onload () {\n      if (typeof image !== 'string')\n        DOMURL.revoke(url)\n      resolve({width: img.width, height: img.height})\n    }\n\n    img.onerror = function onerror (err) {\n      if (typeof image !== 'string')\n        DOMURL.revoke(url)\n      reject(err)\n    }\n\n    img.src = url\n  })\n}\n"]},"metadata":{},"sourceType":"script"}